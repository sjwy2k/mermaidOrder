<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- google Class Bean설정 추가 -->
	<!-- 클라이언트ID와 보안비밀 세팅-->
	<beans:bean id="googleConnectionFactory"
		class="org.springframework.social.google.connect.GoogleConnectionFactory">
		<beans:constructor-arg value="127734500982-i656m382l4bit2b88b640c34c8rs82ou.apps.googleusercontent.com" />
		<beans:constructor-arg value="7T2Oj8FZhJcfOSfnQuKsNrUc" />
	</beans:bean>
	<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
	<beans:bean id="googleOAuth2Parameters" class="org.springframework.social.oauth2.OAuth2Parameters">
		<beans:property name="scope" value="https://www.googleapis.com/auth/plus.login" />
		<beans:property name="redirectUri" value="http://localhost:9090/mermaid/oauth2callback" />
	</beans:bean>
	
	
	<context:component-scan base-package="com.mermaid.spring" />
	
	<interceptors>
		<!-- <interceptor>
			<mapping path="/owner/*"/> 			
			<beans:bean id="loggerInter" class="com.mermaid.spring.common.interceptor.LoggerInterceptor" />
		</interceptor> -->
		<interceptor>
			<mapping path="/category/**"/> 
			<mapping path="/store/**"/> 
			<exclude-mapping path="/owner/*"/>
			<beans:bean id="loginCheck" class="com.mermaid.spring.common.interceptor.LoginCheckInterceptor" />
		</interceptor>
	</interceptors>
	
		
	<!-- 파일업로드설정 -->
	<beans:bean id="multipartResolver" 
	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="10485760" />
	</beans:bean>
	
	<!-- ajax통신 -->
	<!-- ModelAndView용 JSON Resolver -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView">
	</beans:bean>
	
	<!-- Resolver등록 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- JSON처리 객체 등록하기 : @ResponseBody -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter" />
			</beans:list>
		</beans:property>
	</beans:bean>

	
</beans:beans>
